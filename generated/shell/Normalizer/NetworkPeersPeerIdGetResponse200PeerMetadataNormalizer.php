<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Pezos\Generated\Shell\Normalizer;

use Jane\Component\JsonSchemaRuntime\Reference;
use Pezos\Generated\Shell\Runtime\Normalizer\CheckArray;
use Pezos\Generated\Shell\Runtime\Normalizer\ValidatorTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class NetworkPeersPeerIdGetResponse200PeerMetadataNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;
    use ValidatorTrait;

    public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
    {
        return $type === \Pezos\Generated\Shell\Model\NetworkPeersPeerIdGetResponse200PeerMetadata::class;
    }

    public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
    {
        return is_object($data) && get_class($data) === \Pezos\Generated\Shell\Model\NetworkPeersPeerIdGetResponse200PeerMetadata::class;
    }

    public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \Pezos\Generated\Shell\Model\NetworkPeersPeerIdGetResponse200PeerMetadata();
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('responses', $data)) {
            $object->setResponses($this->denormalizer->denormalize($data['responses'], \Pezos\Generated\Shell\Model\NetworkPeersPeerIdGetResponse200PeerMetadataResponses::class, 'json', $context));
            unset($data['responses']);
        }
        if (\array_key_exists('requests', $data)) {
            $object->setRequests($this->denormalizer->denormalize($data['requests'], \Pezos\Generated\Shell\Model\NetworkPeersPeerIdGetResponse200PeerMetadataRequests::class, 'json', $context));
            unset($data['requests']);
        }
        if (\array_key_exists('valid_blocks', $data)) {
            $object->setValidBlocks($data['valid_blocks']);
            unset($data['valid_blocks']);
        }
        if (\array_key_exists('old_heads', $data)) {
            $object->setOldHeads($data['old_heads']);
            unset($data['old_heads']);
        }
        if (\array_key_exists('prevalidator_results', $data)) {
            $object->setPrevalidatorResults($this->denormalizer->denormalize($data['prevalidator_results'], \Pezos\Generated\Shell\Model\NetworkPeersPeerIdGetResponse200PeerMetadataPrevalidatorResults::class, 'json', $context));
            unset($data['prevalidator_results']);
        }
        if (\array_key_exists('unactivated_chains', $data)) {
            $object->setUnactivatedChains($data['unactivated_chains']);
            unset($data['unactivated_chains']);
        }
        if (\array_key_exists('inactive_chains', $data)) {
            $object->setInactiveChains($data['inactive_chains']);
            unset($data['inactive_chains']);
        }
        if (\array_key_exists('future_blocks_advertised', $data)) {
            $object->setFutureBlocksAdvertised($data['future_blocks_advertised']);
            unset($data['future_blocks_advertised']);
        }
        if (\array_key_exists('unadvertised', $data)) {
            $object->setUnadvertised($this->denormalizer->denormalize($data['unadvertised'], \Pezos\Generated\Shell\Model\NetworkPeersPeerIdGetResponse200PeerMetadataUnadvertised::class, 'json', $context));
            unset($data['unadvertised']);
        }
        if (\array_key_exists('advertisements', $data)) {
            $object->setAdvertisements($this->denormalizer->denormalize($data['advertisements'], \Pezos\Generated\Shell\Model\NetworkPeersPeerIdGetResponse200PeerMetadataAdvertisements::class, 'json', $context));
            unset($data['advertisements']);
        }
        foreach ($data as $key => $value) {
            if (preg_match('/.*/', (string) $key)) {
                $object[$key] = $value;
            }
        }

        return $object;
    }

    public function normalize(mixed $data, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
    {
        $dataArray = [];
        $dataArray['responses'] = $this->normalizer->normalize($data->getResponses(), 'json', $context);
        $dataArray['requests'] = $this->normalizer->normalize($data->getRequests(), 'json', $context);
        $dataArray['valid_blocks'] = $data->getValidBlocks();
        $dataArray['old_heads'] = $data->getOldHeads();
        $dataArray['prevalidator_results'] = $this->normalizer->normalize($data->getPrevalidatorResults(), 'json', $context);
        $dataArray['unactivated_chains'] = $data->getUnactivatedChains();
        $dataArray['inactive_chains'] = $data->getInactiveChains();
        $dataArray['future_blocks_advertised'] = $data->getFutureBlocksAdvertised();
        $dataArray['unadvertised'] = $this->normalizer->normalize($data->getUnadvertised(), 'json', $context);
        $dataArray['advertisements'] = $this->normalizer->normalize($data->getAdvertisements(), 'json', $context);
        foreach ($data as $key => $value) {
            if (preg_match('/.*/', (string) $key)) {
                $dataArray[$key] = $value;
            }
        }

        return $dataArray;
    }

    public function getSupportedTypes(?string $format = null): array
    {
        return [\Pezos\Generated\Shell\Model\NetworkPeersPeerIdGetResponse200PeerMetadata::class => false];
    }
}
