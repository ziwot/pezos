<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Pezos\Generated\Mempool\Normalizer;

use Pezos\Generated\Mempool\Runtime\Normalizer\CheckArray;
use Pezos\Generated\Mempool\Runtime\Normalizer\ValidatorTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class JaneObjectNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;
    use ValidatorTrait;
    protected $normalizers = [
        \Pezos\Generated\Mempool\Model\_022PsRiotumBlockHeaderAlphaFullHeader::class => _022PsRiotumBlockHeaderAlphaFullHeaderNormalizer::class,

        \Pezos\Generated\Mempool\Model\_022PsRiotumInlinedAttestation::class => _022PsRiotumInlinedAttestationNormalizer::class,

        \Pezos\Generated\Mempool\Model\_022PsRiotumInlinedPreattestation::class => _022PsRiotumInlinedPreattestationNormalizer::class,

        \Pezos\Generated\Mempool\Model\_022PsRiotumInlinedPreattestationContents::class => _022PsRiotumInlinedPreattestationContentsNormalizer::class,

        \Pezos\Generated\Mempool\Model\_022PsRiotumScriptedContracts::class => _022PsRiotumScriptedContractsNormalizer::class,

        \Pezos\Generated\Mempool\Model\MonitorOperationsGetResponse200Item::class => MonitorOperationsGetResponse200ItemNormalizer::class,

        \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200::class => PendingOperationsGetResponse200Normalizer::class,

        \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200ValidatedItem::class => PendingOperationsGetResponse200ValidatedItemNormalizer::class,

        \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200RefusedItem::class => PendingOperationsGetResponse200RefusedItemNormalizer::class,

        \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200OutdatedItem::class => PendingOperationsGetResponse200OutdatedItemNormalizer::class,

        \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200BranchRefusedItem::class => PendingOperationsGetResponse200BranchRefusedItemNormalizer::class,

        \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200BranchDelayedItem::class => PendingOperationsGetResponse200BranchDelayedItemNormalizer::class,

        \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200UnprocessedItem::class => PendingOperationsGetResponse200UnprocessedItemNormalizer::class,

        \Pezos\Generated\Mempool\Model\RequestOperationsPostBody::class => RequestOperationsPostBodyNormalizer::class,

        \Pezos\Generated\Mempool\Model\RequestOperationsPostResponse200::class => RequestOperationsPostResponse200Normalizer::class,

        \Pezos\Generated\Mempool\Model\UnbanAllOperationsPostBody::class => UnbanAllOperationsPostBodyNormalizer::class,

        \Jane\Component\JsonSchemaRuntime\Reference::class => \Pezos\Generated\Mempool\Runtime\Normalizer\ReferenceNormalizer::class,
    ];
    protected $normalizersCache = [];

    public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
    {
        return array_key_exists($type, $this->normalizers);
    }

    public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
    {
        return is_object($data) && array_key_exists(get_class($data), $this->normalizers);
    }

    public function normalize(mixed $data, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
    {
        $normalizerClass = $this->normalizers[get_class($data)];
        $normalizer = $this->getNormalizer($normalizerClass);

        return $normalizer->normalize($data, $format, $context);
    }

    public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
    {
        $denormalizerClass = $this->normalizers[$type];
        $denormalizer = $this->getNormalizer($denormalizerClass);

        return $denormalizer->denormalize($data, $type, $format, $context);
    }

    private function getNormalizer(string $normalizerClass)
    {
        return $this->normalizersCache[$normalizerClass] ?? $this->initNormalizer($normalizerClass);
    }

    private function initNormalizer(string $normalizerClass)
    {
        $normalizer = new $normalizerClass();
        $normalizer->setNormalizer($this->normalizer);
        $normalizer->setDenormalizer($this->denormalizer);
        $this->normalizersCache[$normalizerClass] = $normalizer;

        return $normalizer;
    }

    public function getSupportedTypes(?string $format = null): array
    {
        return [
            \Pezos\Generated\Mempool\Model\_022PsRiotumBlockHeaderAlphaFullHeader::class => false,
            \Pezos\Generated\Mempool\Model\_022PsRiotumInlinedAttestation::class => false,
            \Pezos\Generated\Mempool\Model\_022PsRiotumInlinedPreattestation::class => false,
            \Pezos\Generated\Mempool\Model\_022PsRiotumInlinedPreattestationContents::class => false,
            \Pezos\Generated\Mempool\Model\_022PsRiotumScriptedContracts::class => false,
            \Pezos\Generated\Mempool\Model\MonitorOperationsGetResponse200Item::class => false,
            \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200::class => false,
            \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200ValidatedItem::class => false,
            \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200RefusedItem::class => false,
            \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200OutdatedItem::class => false,
            \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200BranchRefusedItem::class => false,
            \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200BranchDelayedItem::class => false,
            \Pezos\Generated\Mempool\Model\PendingOperationsGetResponse200UnprocessedItem::class => false,
            \Pezos\Generated\Mempool\Model\RequestOperationsPostBody::class => false,
            \Pezos\Generated\Mempool\Model\RequestOperationsPostResponse200::class => false,
            \Pezos\Generated\Mempool\Model\UnbanAllOperationsPostBody::class => false,
            \Jane\Component\JsonSchemaRuntime\Reference::class => false,
        ];
    }
}
