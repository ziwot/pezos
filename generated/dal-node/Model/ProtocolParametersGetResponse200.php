<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Pezos\Generated\Dal\Model;

class ProtocolParametersGetResponse200 extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var bool
     */
    protected $featureEnable;
    /**
     * @var bool
     */
    protected $incentivesEnable;
    /**
     * @var int
     */
    protected $numberOfSlots;
    /**
     * @var int
     */
    protected $attestationLag;
    /**
     * @var int
     */
    protected $attestationThreshold;
    /**
     * @var ProtocolParametersGetResponse200TrapsFraction
     */
    protected $trapsFraction;
    /**
     * @var ProtocolParametersGetResponse200CryptoboxParameters
     */
    protected $cryptoboxParameters;
    /**
     * @var int
     */
    protected $scRollupChallengeWindowInBlocks;
    /**
     * @var int
     */
    protected $commitmentPeriodInBlocks;
    /**
     * @var int
     */
    protected $dalAttestedSlotsValidityLag;
    /**
     * @var int
     */
    protected $blocksPerCycle;

    public function getFeatureEnable(): bool
    {
        return $this->featureEnable;
    }

    public function setFeatureEnable(bool $featureEnable): self
    {
        $this->initialized['featureEnable'] = true;
        $this->featureEnable = $featureEnable;

        return $this;
    }

    public function getIncentivesEnable(): bool
    {
        return $this->incentivesEnable;
    }

    public function setIncentivesEnable(bool $incentivesEnable): self
    {
        $this->initialized['incentivesEnable'] = true;
        $this->incentivesEnable = $incentivesEnable;

        return $this;
    }

    public function getNumberOfSlots(): int
    {
        return $this->numberOfSlots;
    }

    public function setNumberOfSlots(int $numberOfSlots): self
    {
        $this->initialized['numberOfSlots'] = true;
        $this->numberOfSlots = $numberOfSlots;

        return $this;
    }

    public function getAttestationLag(): int
    {
        return $this->attestationLag;
    }

    public function setAttestationLag(int $attestationLag): self
    {
        $this->initialized['attestationLag'] = true;
        $this->attestationLag = $attestationLag;

        return $this;
    }

    public function getAttestationThreshold(): int
    {
        return $this->attestationThreshold;
    }

    public function setAttestationThreshold(int $attestationThreshold): self
    {
        $this->initialized['attestationThreshold'] = true;
        $this->attestationThreshold = $attestationThreshold;

        return $this;
    }

    public function getTrapsFraction(): ProtocolParametersGetResponse200TrapsFraction
    {
        return $this->trapsFraction;
    }

    public function setTrapsFraction(ProtocolParametersGetResponse200TrapsFraction $trapsFraction): self
    {
        $this->initialized['trapsFraction'] = true;
        $this->trapsFraction = $trapsFraction;

        return $this;
    }

    public function getCryptoboxParameters(): ProtocolParametersGetResponse200CryptoboxParameters
    {
        return $this->cryptoboxParameters;
    }

    public function setCryptoboxParameters(ProtocolParametersGetResponse200CryptoboxParameters $cryptoboxParameters): self
    {
        $this->initialized['cryptoboxParameters'] = true;
        $this->cryptoboxParameters = $cryptoboxParameters;

        return $this;
    }

    public function getScRollupChallengeWindowInBlocks(): int
    {
        return $this->scRollupChallengeWindowInBlocks;
    }

    public function setScRollupChallengeWindowInBlocks(int $scRollupChallengeWindowInBlocks): self
    {
        $this->initialized['scRollupChallengeWindowInBlocks'] = true;
        $this->scRollupChallengeWindowInBlocks = $scRollupChallengeWindowInBlocks;

        return $this;
    }

    public function getCommitmentPeriodInBlocks(): int
    {
        return $this->commitmentPeriodInBlocks;
    }

    public function setCommitmentPeriodInBlocks(int $commitmentPeriodInBlocks): self
    {
        $this->initialized['commitmentPeriodInBlocks'] = true;
        $this->commitmentPeriodInBlocks = $commitmentPeriodInBlocks;

        return $this;
    }

    public function getDalAttestedSlotsValidityLag(): int
    {
        return $this->dalAttestedSlotsValidityLag;
    }

    public function setDalAttestedSlotsValidityLag(int $dalAttestedSlotsValidityLag): self
    {
        $this->initialized['dalAttestedSlotsValidityLag'] = true;
        $this->dalAttestedSlotsValidityLag = $dalAttestedSlotsValidityLag;

        return $this;
    }

    public function getBlocksPerCycle(): int
    {
        return $this->blocksPerCycle;
    }

    public function setBlocksPerCycle(int $blocksPerCycle): self
    {
        $this->initialized['blocksPerCycle'] = true;
        $this->blocksPerCycle = $blocksPerCycle;

        return $this;
    }
}
