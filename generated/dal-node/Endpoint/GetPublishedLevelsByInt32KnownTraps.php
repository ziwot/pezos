<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Pezos\Generated\Dal\Endpoint;

class GetPublishedLevelsByInt32KnownTraps extends \Pezos\Generated\Dal\Runtime\Client\BaseEndpoint implements \Pezos\Generated\Dal\Runtime\Client\Endpoint
{
    use \Pezos\Generated\Dal\Runtime\Client\EndpointTrait;
    protected $int32;

    /**
     * For a given published level, return all the traps known by the node. Optional arguments allow to restrict the output to a given delegate or slot index.
     *
     * @param array $queryParameters {
     *
     * @var string $delegate A Secp256k1 of a Ed25519 public key hash (Base58Check-encoded)
     * @var string $slot_index
     *             }
     */
    public function __construct(string $int32, array $queryParameters = [])
    {
        $this->int32 = $int32;
        $this->queryParameters = $queryParameters;
    }

    public function getMethod(): string
    {
        return 'GET';
    }

    public function getUri(): string
    {
        return str_replace(['{int32}'], [$this->int32], '/published_levels/{int32}/known_traps');
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, $streamFactory = null): array
    {
        return [[], null];
    }

    public function getExtraHeaders(): array
    {
        return ['Accept' => ['application/json']];
    }

    protected function getQueryOptionsResolver(): \Symfony\Component\OptionsResolver\OptionsResolver
    {
        $optionsResolver = parent::getQueryOptionsResolver();
        $optionsResolver->setDefined(['delegate', 'slot_index']);
        $optionsResolver->setRequired([]);
        $optionsResolver->setDefaults([]);
        $optionsResolver->addAllowedTypes('delegate', ['string']);
        $optionsResolver->addAllowedTypes('slot_index', ['string']);

        return $optionsResolver;
    }

    /**
     * @return \Pezos\Generated\Dal\Model\PublishedLevelsInt32KnownTrapsGetResponse200Item[]|null
     */
    protected function transformResponseBody(\Psr\Http\Message\ResponseInterface $response, \Symfony\Component\Serializer\SerializerInterface $serializer, ?string $contentType = null)
    {
        $status = $response->getStatusCode();
        $body = (string) $response->getBody();
        if (is_null($contentType) === false && (200 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            return $serializer->deserialize($body, 'Pezos\\Generated\\Dal\\Model\\PublishedLevelsInt32KnownTrapsGetResponse200Item[]', 'json');
        }
        if (mb_strpos($contentType, 'application/json') !== false) {
            return json_decode($body);
        }
    }

    public function getAuthenticationScopes(): array
    {
        return [];
    }
}
